# ------ Keybindings cheatsheet ----------
# tmux new -s first
# tmux ls 
# tmux attach -t first
# tmux kill-session -t first
 
# # super is "ctrl + w"
# super + | 
# super + -
# super + [
 
# super + shift + [h|j|k|l] ::: resize
# super + shift + [< | >]: "swap-window -t [+n|-n]" ::: swap windows
# super + shift + r: "move-window -r"

# super + shift + b: toggle status bar
# ------ Notes ----------

# tmux settings
# use custom shell 
set-option -g default-shell /bin/zsh

# setting default prefix ctrl-b to ctrl-w
unbind C-b
set-option -g prefix C-w

# don't rename windows automatically
set-option -g allow-rename off

# Start windows and panes at 0
set -g base-index 0
setw -g pane-base-index 0

# Automatically re-number window numbers
set -g renumber-windows on

# enable mouse usage
setw -g mouse on

# enable vim keys to scroll up and down terminal
setw -g mode-keys vi


# toggle statusbar
bind-key b set-option status

# swap windows
bind-key -r < swap-window -t -1\; select-window -t -1
bind-key -r > swap-window -t +1\; select-window -t +1

# setting keys to create new, split horizontal, split vertical
bind c new-window       -c "#{pane_current_path}"
bind | split-window -h  -c "#{pane_current_path}"
bind - split-window -v  -c "#{pane_current_path}"

# setting keys to resize using H, J, K, L
bind -r H resize-pane -L 4
bind -r J resize-pane -D 4
bind -r K resize-pane -U 4
bind -r L resize-pane -R 4

# binding movement keys with C-[h,j,k,l] (integration with vim)
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
is_fzf="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?fzf$'"
bind -n C-h run "($is_vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "($is_vim && tmux send-keys C-j)  || ($is_fzf && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "($is_vim && tmux send-keys C-k) || ($is_fzf && tmux send-keys C-k)  || tmux select-pane -U"
bind -n C-l run  "($is_vim && tmux send-keys C-l) || tmux select-pane -R"
# set-window-option -g mode-keys vi

# allowing other apps, such as vim, to use c-q
bind C-w send-prefix
set-option -g focus-events on

# setup with neovim
set-option -sg escape-time 100
set-option -sa terminal-overrides ',screen-256color:RGB'
set-option -ga terminal-overrides ',screen-256color:Tc'

# address vim switching delay (http://superuser.com/a/252717/65504)
set -s escape-time 0


# ---------------------------
# ------ theme custom
# When migrating to another machine, adjust accordingly.
# ---------------------------
# set true colors for tmux
set -as terminal-features ",tmux-256color:RGB"

# Set status bar on top
set-option -g status-position top

# Active pane colorscheme
set -g pane-active-border-style bg=default,fg="#a7a2c4"
set -g pane-border-style fg="#2b1329"

# transparent status line
set-option -g status-style bg=default

# UI
set -g status "on"
set -g status-justify "left"
set -g status-style none
set -g message-style bg=colour6,fg=colour0

set -g status-left-length "9"
set -g status-left-style none
set -g status-left " #[fg=colour75]☰ #[fg=colour9]☵ #[fg=colour75]☷ #[fg=colour9]☲ " 

set -g status-right-length "160"
set -g status-right-style none
set -g status-right "#{prefix_highlight} #[fg=colour0,nobold,nounderscore,noitalics]  #[fg=colour75]\
#[fg=colour242]  \
#[fg=colour75]  ":: 

set -g pane-border-style bg=default
set -g pane-active-border-style bg=default,fg=colour30
set -g pane-border-style fg=colour240

setw -g window-status-style bg=default,fg=colour242,none
setw -g window-status-current-style bg=default,fg=colour242
setw -g window-status-activity-style fg=colour2,none
setw -g window-status-separator ""
setw -g window-status-format "#[fg=colour242,nobold,nounderscore,noitalics] #[fg=colour242] #W \
#[fg=colour0,nobold,nounderscore,noitalics]"
setw -g window-status-current-format "#[fg=colour0,nobold,nounderscore,noitalics] #[fg=colour43] ❖  #W  \
#[fg=colour0,nobold,nounderscore,noitalics]"


