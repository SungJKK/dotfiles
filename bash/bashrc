# Sample .bashrc for SUSE Linux
# Copyright (c) SUSE Software Solutions Germany GmbH

# There are 3 different types of shells in bash: the login shell, normal shell
# and interactive shell. Login shells read ~/.profile and interactive shells
# read ~/.bashrc; in our setup, /etc/profile sources ~/.bashrc - thus all
# settings made here will also take effect in a login shell.
#
# NOTE: It is recommended to make language settings in ~/.profile rather than
# here, since multilingual X sessions would not work properly if LANG is over-
# ridden in every subshell.

test -s ~/.alias && . ~/.alias || true

[ -f ~/.fzf.bash ] && source ~/.fzf.bash

##### ==> Custom settings
# ==> disable ctrl-s and ctrl-q 
stty -ixon 

# ==> vi mode 
set -o vi

# ==> bettery history 
shopt -s histappend 
HISTCONTROL=ignoredups
HISTFILESIZE=10000
HISTSIZE=10000

# ==> Aliases : You can check aliases with  $ alias
# ==> adding colors 
alias diff='diff --color=auto'
alias grep='grep --color=auto'
alias ip='ip --color=auto'
alias ls='ls -hN --color=auto --group-directories-first'
alias ccat='highlight --out-format=ansi'

function man() {
  export LESS_TERMCAP_mb=$'\e[1;33m'
  export LESS_TERMCAP_md=$'\e[1;33m'
  export LESS_TERMCAP_me=$'\e[0m'

  export LESS_TERMCAP_so=$'\e[01;31m'
  export LESS_TERMCAP_se=$'\e[0m'

  export LESS_TERMCAP_ue=$'\e[0m'
  export LESS_TERMCAP_us=$'\e[1;4;34m'

  export GROFF_NO_SGR=1                  # for konsole and gnome-terminal
  command man "$@"
}

# ==> user aliases
alias vim='nvim'
  # set default editor to neovim

alias lman='man $(find /usr/share/man/man1 -type f | shuf | head -1)'
  # generate random man pages to learn about linux 

alias gc='ctags -R -f ./.git/tags .'
  # generate ctags, and put them inside .git folder

alias ll='ls -l'
alias la='ls -la'
  # list 
alias lt='ls --human-readable --size -1 -S --classify'
  # show files by file sizes
  # in macOS : alias lt='du -sh * | sort -h'

alias l.='ls -d .*'
alias ll.='ls -ld .*'
  # show dotfiles only

# create directory recursively
alias mkdir='mkdir -pv'

# view only mounted devices
alias mnt="mount | awk -F' ' '{ printf \"%s\t%s\n\",\$1,\$3; }' | column -t | grep -E /dev/ | sort"
  # in macOS : alias mnt='mount | grep -E ^/dev | column -t'

# make mount more readable
alias mount='mount | column -t'

# find command in history
alias gh='history | grep'

# last files edited
alias left='ls -t -1'

# count files 
alias count='find . -type f | wc -l'

# copy using rsync. 
# Rsync is good for copying files both locally and remotely.
alias cpv='rsync -ah --info=progress2'

# safely remove files
alias rm='rm -i'
alias rms='mv --force -t ~/.local/share/Trash/files'
  # TODO : create script to clean Trash files directory periodically.
alias rmf='rm -rf'
  # force remove all files

# resume wget by default
alias wget='wget -c'

# show processes
alias paux='ps aux | less'

# exit command like vim
alias :q='exit'

# change directory, and show contents
function cd() {
  DIR="$*";
    # if no DIR given, go home
    if [ $# -lt 1 ]; then
      DIR=$HOME;
    fi;
  builtin cd "${DIR}" && \
  ls -F 
}

# ==> prompt settings 
# PS1="\n \[\033[0;34m\]┌─||\[\033[1;31m\]\t\[\033[1;37m\], \j ⇄ , \[\033[1;33m\]\w\[\033[0;34m\]|| \n └─||─▶ \[\033[1;36m\]\$ \[\033[0m\]"

# starship prompt
eval "$(starship init bash)"


# >>> python conda >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/home/sung/miniconda3/bin/conda' 'shell.bash' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/home/sung/miniconda3/etc/profile.d/conda.sh" ]; then
        . "/home/sung/miniconda3/etc/profile.d/conda.sh"
    else
        export PATH="/home/sung/miniconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

# >>> go gvm >>>
[[ -s "/home/sung/.gvm/scripts/gvm" ]] && source "/home/sung/.gvm/scripts/gvm"

# >>> haskell ghc >>>
[ -f "/home/sung/.ghcup/env" ] && source "/home/sung/.ghcup/env" # ghcup-env
