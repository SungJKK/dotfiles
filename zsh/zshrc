### ZSH SETTINGS ###
# If not running interactively, don't do anything
[[ $- != *i* ]] && return

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.config/zsh/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# disable ctrl-s and ctrl-q
# stty -ixon

# vi mode
set editing-mode vi

# command completion
autoload -Uz compinit && compinit
CASE_SENSITIVE="false"

# case insensitive globbing
zstyle ':completion:*' matcher-list '' 'm:{a-zA-Z}={A-Za-z}'

# bettery command history
setopt EXTENDED_HISTORY          
setopt SHARE_HISTORY
setopt APPEND_HISTORY
setopt HIST_EXPIRE_DUPS_FIRST 
setopt HIST_IGNORE_DUPS
setopt HIST_IGNORE_ALL_DUPS      
setopt HIST_FIND_NO_DUPS
setopt HIST_REDUCE_BLANKS

# fzf command history search
export FZF_DEFAULT_COMMAND="rg --files --hidden --follow --glob '!.git'"
fzf_history_seach() {
  BUFFER=$(history -t '%Y-%m-%d %H:%M:%S' 0 | grep -v 1969 | fzf +s +m -x --tac -e -q "$BUFFER" | awk '{print substr($0, index($0, $4))}')
  zle end-of-line
}
autoload fzf_history_seach
zle -N fzf_history_seach
bindkey '^r' fzf_history_seach


### ALIASES & FUNCTIONS ### 
man() {
  export LESS_TERMCAP_mb=$'\e[1;33m'
  export LESS_TERMCAP_md=$'\e[1;33m'
  export LESS_TERMCAP_me=$'\e[0m'

  export LESS_TERMCAP_so=$'\e[01;31m'
  export LESS_TERMCAP_se=$'\e[0m'

  export LESS_TERMCAP_ue=$'\e[0m'
  export LESS_TERMCAP_us=$'\e[1;4;34m'

  export GROFF_NO_SGR=1
  command man "$@"
}

alias diff='diff --color=auto'

alias grep='grep --color=auto'

alias ip='ip --color=auto'

alias ccat='highlight --out-format=ansi'

# alias ls='ls -hN --color=auto --group-directories-first'
# alias ll='ls -l'
# alias la='ls -al'
# alias lt='ls --human-readable --size -l -S --classify'
  # show files by size
  # in OSX : lt='du -sh * | sort -h'
alias ls='exa --icons'
alias ll='exa --icons --long'
alias la='exa --icons --header --long --all --all --group --links --inode --blocks'
alias lt='exa --icons --long --tree --level=2'
alias lg='exa --icons --long --group --all --git'

# alias mkdir='mkdir -pv'
mkdir() {
  command mkdir -pv "$@"
}

alias mount='mount | column -t'
alias mnt="mount | awk -F' ' '{ printf \"%s\t%s\n\",\$1,\$3; }' | column -t | grep -E /dev/ | sort"
  # view only mounted devices
  # in macOS : alias mnt='mount | grep -E ^/dev | column -t'

alias h='history'
alias hg='history | grep'
alias hgi='history | grep -i'

alias left='ls -t -1'
  # last files edited

alias count='find . -type f | wc -l'
  # count files 

alias cpv='rsync -ah --info=progress2'
  # copy using rsync to show progress

alias rm='rm -i'
alias rms='mv --force -t ~/.local/share/Trash/files'
  # save files into trash
alias rmf='rm -rf'
  # force remove all files

alias wget='wget -c'
  # resume wget by default

alias paux='ps aux | less'
  # show processes

# show contents of directory
cd() {
  DIR="$*";
    # if no DIR given, go home
    if [ $# -lt 1 ]; then
      DIR=$HOME;
    fi;
  builtin cd "${DIR}" && ls 
}

# alias vim='nvim'

alias yeet='paru -Rcs'
  # using 'yay' to update, 'yeet' to remove packages lol :)

gc() {
  command ctags -R -f ./.git/tags . "$@"
}


### PLUGINS ###
# Added by Zinit's installer
if [[ ! -f $HOME/.config/zsh/.zinit/bin/zinit.zsh ]]; then
    print -P "%F{33}▓▒░ %F{220}Installing %F{33}DHARMA%F{220} Initiative Plugin Manager (%F{33}zdharma/zinit%F{220})…%f"
    command mkdir -p "$HOME/.config/zsh/.zinit" && command chmod g-rwX "$HOME/.config/zsh/.zinit"
    command git clone https://github.com/zdharma/zinit "$HOME/.config/zsh/.zinit/bin" && \
        print -P "%F{33}▓▒░ %F{34}Installation successful.%f%b" || \
        print -P "%F{160}▓▒░ The clone has failed.%f%b"
fi

source "$HOME/.config/zsh/.zinit/bin/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

# Load a few important annexes, without Turbo
# (this is currently required for annexes)
zinit light-mode for \
    zinit-zsh/z-a-rust \
    zinit-zsh/z-a-as-monitor \
    zinit-zsh/z-a-patch-dl \
    zinit-zsh/z-a-bin-gem-node

# End of Zinit's installer chunk

# User plugins
zinit ice depth=1
zinit light romkatv/powerlevel10k

zinit for \
  light-mode zsh-users/zsh-completions \
  light-mode zsh-users/zsh-history-substring-search \
  light-mode zdharma/fast-syntax-highlighting 

zinit load greymd/docker-zsh-completion

zinit load Aloxaf/fzf-tab
zinit load agkozak/zsh-z

# To customize prompt, run `p10k configure` or edit ~/.config/zsh/.p10k.zsh.
[[ ! -f ~/.config/zsh/.p10k.zsh ]] || source ~/.config/zsh/.p10k.zsh


### PROGRAMMING ###


