# install essential packages during installation when using pacstrap
base base-devel linux-firmware sof-firmware 
linux linux-headers linux-zen linux-zen-headers 
git vim man-db man-pages texinfo 
networkmanager wpa_supplicant
e2fsprogs
amd-ucode
refind # https://gist.github.com/PillTime/d1eea7b6e000112f7fd3da56962ad458


# post installation 
0. Connect to internet w/ nmcli
    $ nmcli device wifi list
    $ nmcli device wifi connect SSID password pwd

- Enable NTP
    $ timedatectl set-ntp true

- Setup firewall 
    $ 


1. Configure pacman & mirrors & other helpers
- enable colors & parallel downloads 
    $ vim /etc/pacman.conf

- enable reflector 
    $ pacman -S reflector
    $ reflector --latest 200 --protocol http,https --sort rate --save /etc/pacman.d/mirrorlist
    $ systemctl enable reflector.timer
    $ systemctl start reflector.timer

- enable systemd pacman cache cleaner
    $ pacman -S pacman-contrib
    $ systemctl enable paccache.timer
    $ systemctl start paccache.timer

- * removing unused packages
    $ pacman -Qtdq | pacman -Rns -
    $ pacman -Qqd | pacman -Rsu [--print] -

- install aur helper (yay)
    $ cd /opt
    $ git clone https://aur.archlinux.org/yay-git.git
    $ sudo chown -R sung:sung ./yay-git
    $ cd yay-git && makepkg -si

- install other pacman helpers
    $ pacman -S expac pacutils 

- install flatpak 
    $ pacman -S flatpak



2. Setup hardware (ssd, cpu, bluetooth, audio, printer, keyboard input)
- Enable trim for ssd
    $ pacman -S util-linux
    $ systemctl enable fstrim.service
    $ systemctl enable fstrim.timer

- CPU performance
    cpupower
    cpupower-gui (aur)
    auto-cpufreq-git (aur)

- Bluetooth 
    bluez
    bluez-utils
    blueman 

- Audio 
    pipewire 
    pipewire-alsa
    pipewire-pulse
    pipewire-jack
    wireplumber

    helvum

- Printer
    cups cups-pdf
    $ systemctl enable cups.service
    hplip
    system-config-printer

- Keyboard Input
    fcitx5
    fcitx5-im
    fcitx5-hangul
    fcitx5-configtool (gui)
    fcitx5-gtk 
    fcitx5-qt

    fontconfig 
    noto-fonts
    noto-fonts-cjk
    noto-fonts-emoji
    adobe-source-han-sans-kr-fonts
    nerd-fonts-complete (jetbrains, iosevka)


6. Graphical
- Display Drivers (GPU)
    mesa xf86-video-amdgpu vulkan-radeon 

- Display server 
    xorg

- Desktop Environment
    sddm 
    plasma-desktop 


    picom
    eww + rofi
    dunst
    clipman

    mvi (image)
    mpv (video)

    xdg-ninja


7. Apps & Tools
    gimp
    obs-studio
    kdenlive

    firefox-kde firefox-developer-edition-kde
    tor 

    zathura
    zathura-djvu
    zathura-pdf-mupdf
    mupdf

    libre-office

    zotero
    obsidian
    ticktick

    imsonia (rest client)
    figma
    tableau-public

    thunderbird
    discord
    element
    slack
    zoom

    borgbackup
    vorta

#########################
# setup
#########################
kitty 

tmux

bash
fish 
    fisher
    z
    fzf.fish
    fish-ssh-agent
    done
    colored_man_pages.fish
    bass
    nvm.fish

sed & awk & grep 
rg (ripgrep)
ag (the silver searcher)
fzf
fd 
jq

exa
duf
bat
highlight
delta (better diff, git diff)

procs
htop
pfetch

nnn (cli file browser)
imagemagick
viu

zip, unzip, gzip
tar 
curl
wget

ping 
traceroute 
ip (instead of deprecated ifconfig, arp, iptunnel, nameif, route commands)
nmap & ncat + netstat
nftables (firewall; instead of ufw or iptables)

gnupg2
openssh
sftp
rsync
openVpn
rtorrent

testdisk & safecopy (data recovery tools)

pass (password)
hyperfine (benchmark commands)
rmlint (system cleaner)

mpd  (music)
ncmpcpp
ffmpeg (audio / video converter)

ventoy (usb)

man-db
man-pages (run mandb command once a day in cron)
cppman (check github docs on exporting it to man)
tldr
cheat.sh 

vim
neovim
vscodium

git
gh-cli
lazygit

pandoc 
TexLive 

license (for generating software licenses)


#########################
# Programming & Neovim
#########################
c / c++
    gcc / g++ 
    gdb 
    clang (=> clangd, clang-format, lldb)
    make, cmake

haskell
    ghcup (=> ghc, cabal, hls, floskell) 

python
    pyenv (manage python versions)
    pip3, python3 (=> black)
    poetry
    miniconda 

typescript & javascript
    nvm (installed by fish)
    node 
    yarn
    npm
    (=> prettier)

rust
    rustup (=> rust, cargo, stylua)
go
perl
lua

SETUP
    - pip3 install pynvim
    - npm i -g neovim

LSP
    - cargo install asm-lsp

    - lua: https://github.com/sumneko/lua-language-server
    - clangd: 
    - pip install cmake-language-server
    - hls: https://github.com/haskell/haskell-language-server

    - npm i -g bash-language-server
        - yay -S shellcheck
    - npm i -g vscode-langservers-extracted
    - npm i -g yaml-language-server
    - npm i -g @ansible/ansible-language-server
    - npm i -g dockerfile-language-server-nodejs
    - npm i -g typescript typescript-language-server
    - npm i -g pyright


pg-cli
pgAdmin4

docker 
kubectl + helm
k3d

aws-cli-v2 
aws-vault
awless

terraform (creating aws infranstructure)
ansible (provisioning & managing cloud actions)


    # misc:
        # ping, traceroute, ip (iproute2mac)
        # scp, sftp, nordvpn

        # xdg-ninja

        # tldr
        # cheat.sh 
        # license (nishanths/license)


        # c / c++
        #     gcc / g++ 
        #     gdb 
        #     clang (=> clangd, clang-format, lldb)
        #     make, cmake
         
        # haskell
        #     ghcup (=> ghc, cabal, hls, floskell) 
         
        # python
        #     pyenv (manage python versions)
        #     pip3, python3 (=> black)
        #     poetry
        #     miniconda 
         
        # typescript & javascript
        #     nvm (installed by fish)
        #     node 
        #     yarn
        #     npm
        #     (=> prettier)
         
        # rust
        #     rustup (=> rust, cargo, stylua)
        # go
        # perl
        # lua
        # bash 
        #     shellcheck
     
        # SETUP
        #     - pip3 install pynvim
        #     - npm i -g neovim
         
        # LSP
        #     - cargo install asm-lsp
        #
        #     - lua: https://github.com/sumneko/lua-language-server
        #     - clangd: 
        #     - pip install cmake-language-server
        #     - hls: https://github.com/haskell/haskell-language-server
        #
        #     - npm i -g bash-language-server
        #         - yay -S shellcheck
        #     - npm i -g vscode-langservers-extracted
        #     - npm i -g yaml-language-server
        #     - npm i -g @ansible/ansible-language-server
        #     - npm i -g dockerfile-language-server-nodejs
        #     - npm i -g typescript typescript-language-server
        #     - npm i -g pyright



